//
// File generated by c:\root\bin\rootcint at Tue Jun 05 14:56:15 2001.
// Do NOT change. Changes will be lost next time file is generated
//
#include "mcRootDataCint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

//______________________________________________________________________________
TBuffer &operator>>(TBuffer &buf, McVertex *&obj)
{
   // Read a pointer to an object of class McVertex.

   obj = (McVertex *) buf.ReadObject(McVertex::Class());
   return buf;
}

//______________________________________________________________________________
TBuffer &operator>>(TBuffer &buf, McParticle *&obj)
{
   // Read a pointer to an object of class McParticle.

   obj = (McParticle *) buf.ReadObject(McParticle::Class());
   return buf;
}

//______________________________________________________________________________
TBuffer &operator>>(TBuffer &buf, McEvent *&obj)
{
   // Read a pointer to an object of class McEvent.

   obj = (McEvent *) buf.ReadObject(McEvent::Class());
   return buf;
}

//______________________________________________________________________________
void McVertex::Streamer(TBuffer &R__b)
{
   // Stream an object of class McVertex.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> m_pMomI;
      R__b >> m_pMomF;
      R__b >> m_pPosI;
      R__b >> m_pPosF;
      R__b.CheckByteCount(R__s, R__c, McVertex::IsA());
   } else {
      R__c = R__b.WriteVersion(McVertex::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << m_pMomI;
      R__b << m_pMomF;
      R__b << m_pPosI;
      R__b << m_pPosF;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void McVertex::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
   // Inspect the data members of an object of class McVertex.

   TClass *R__cl  = McVertex::IsA();
   Int_t   R__ncp = strlen(R__parent);
   if (R__ncp || R__cl || R__insp.IsA()) { }
   R__insp.Inspect(R__cl, R__parent, "*m_pMomI", &m_pMomI);
   R__insp.Inspect(R__cl, R__parent, "*m_pMomF", &m_pMomF);
   R__insp.Inspect(R__cl, R__parent, "*m_pPosI", &m_pPosI);
   R__insp.Inspect(R__cl, R__parent, "*m_pPosF", &m_pPosF);
   TObject::ShowMembers(R__insp, R__parent);
}

//______________________________________________________________________________
const char *McVertex::Class_Name()
{
   // Return the class name for McVertex.
   return "McVertex";
}

// Static variable to hold initialization object
static McVertex::R__Init __gR__InitMcVertex(0);

//______________________________________________________________________________
void McParticle::Streamer(TBuffer &R__b)
{
   // Stream an object of class McParticle.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> m_nPDGId;
      R__b >> m_pVert;
      R__b >> m_pParent;
      R__b >> m_pChildList;
      R__b >> m_nChildCount;
      R__b.CheckByteCount(R__s, R__c, McParticle::IsA());
   } else {
      R__c = R__b.WriteVersion(McParticle::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << m_nPDGId;
      R__b << m_pVert;
      R__b << m_pParent;
      R__b << m_pChildList;
      R__b << m_nChildCount;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void McParticle::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
   // Inspect the data members of an object of class McParticle.

   TClass *R__cl  = McParticle::IsA();
   Int_t   R__ncp = strlen(R__parent);
   if (R__ncp || R__cl || R__insp.IsA()) { }
   R__insp.Inspect(R__cl, R__parent, "m_nPDGId", &m_nPDGId);
   R__insp.Inspect(R__cl, R__parent, "*m_pVert", &m_pVert);
   R__insp.Inspect(R__cl, R__parent, "*m_pParent", &m_pParent);
   R__insp.Inspect(R__cl, R__parent, "*m_pChildList", &m_pChildList);
   R__insp.Inspect(R__cl, R__parent, "m_nChildCount", &m_nChildCount);
   TObject::ShowMembers(R__insp, R__parent);
}

//______________________________________________________________________________
const char *McParticle::Class_Name()
{
   // Return the class name for McParticle.
   return "McParticle";
}

// Static variable to hold initialization object
static McParticle::R__Init __gR__InitMcParticle(0);

//______________________________________________________________________________
void McEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class McEvent.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> m_nEvent;
      R__b >> m_nRun;
      R__b >> m_nPartCount;
      R__b >> m_pPartList;
      R__b.CheckByteCount(R__s, R__c, McEvent::IsA());
   } else {
      R__c = R__b.WriteVersion(McEvent::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << m_nEvent;
      R__b << m_nRun;
      R__b << m_nPartCount;
      R__b << m_pPartList;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void McEvent::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
   // Inspect the data members of an object of class McEvent.

   TClass *R__cl  = McEvent::IsA();
   Int_t   R__ncp = strlen(R__parent);
   if (R__ncp || R__cl || R__insp.IsA()) { }
   R__insp.Inspect(R__cl, R__parent, "m_nEvent", &m_nEvent);
   R__insp.Inspect(R__cl, R__parent, "m_nRun", &m_nRun);
   R__insp.Inspect(R__cl, R__parent, "m_nPartCount", &m_nPartCount);
   R__insp.Inspect(R__cl, R__parent, "*m_pPartList", &m_pPartList);
   TObject::ShowMembers(R__insp, R__parent);
}

//______________________________________________________________________________
const char *McEvent::Class_Name()
{
   // Return the class name for McEvent.
   return "McEvent";
}

// Static variable to hold initialization object
static McEvent::R__Init __gR__InitMcEvent(0);

/********************************************************
* mcRootDataCint.cxx
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtablemcRootDataCint();

extern "C" void G__set_cpp_environmentmcRootDataCint() {
  G__add_compiledheader("TROOT.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("McVertex.h");
  G__add_compiledheader("McParticle.h");
  G__add_compiledheader("McEvent.h");
  G__cpp_reset_tagtablemcRootDataCint();
}
class G__mcRootDataCintdOcxx_tag {};

void* operator new(size_t size,G__mcRootDataCintdOcxx_tag* p) {
  if(p && G__PVOID!=G__getgvp()) return((void*)p);
#ifndef G__ROOT
  return(malloc(size));
#else
  return(::operator new(size));
#endif
}

/* dummy, for exception */
#ifdef G__EH_DUMMY_DELETE
void operator delete(void *p,G__mcRootDataCintdOcxx_tag* x) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}
#endif

static void G__operator_delete(void *p) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}

void G__DELDMY_mcRootDataCintdOcxx() { G__operator_delete(0); }

extern "C" int G__cpp_dllrevmcRootDataCint() { return(30051472); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* McVertex */
static int G__McVertex_McVertex_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   McVertex *p=NULL;
   if(G__getaryconstruct()) p=new McVertex[G__getaryconstruct()];
   else                    p=new McVertex;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__mcRootDataCintLN_McVertex);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McVertex_McVertex_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   McVertex *p=NULL;
      p = new McVertex(
(TLorentzVector*)G__int(libp->para[0]),(TLorentzVector*)G__int(libp->para[1])
,(TLorentzVector*)G__int(libp->para[2]),(TLorentzVector*)G__int(libp->para[3]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__mcRootDataCintLN_McVertex);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McVertex_getPosInitial_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((const McVertex*)(G__getstructoffset()))->getPosInitial());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McVertex_getPosFinal_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((const McVertex*)(G__getstructoffset()))->getPosFinal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McVertex_getMomInitial_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((const McVertex*)(G__getstructoffset()))->getMomInitial());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McVertex_getMomFinal_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((const McVertex*)(G__getstructoffset()))->getMomFinal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McVertex_Class_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((McVertex*)(G__getstructoffset()))->Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McVertex_Class_Name_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((McVertex*)(G__getstructoffset()))->Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McVertex_Class_Version_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)((McVertex*)(G__getstructoffset()))->Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McVertex_Dictionary_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((McVertex*)(G__getstructoffset()))->Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McVertex_IsA_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((const McVertex*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McVertex_ShowMembers_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((McVertex*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McVertex_Streamer_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((McVertex*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McVertex_StreamerNVirtual_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((McVertex*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McVertex_DeclFileName_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((McVertex*)(G__getstructoffset()))->DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McVertex_DeclFileLine_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((McVertex*)(G__getstructoffset()))->DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McVertex_ImplFileName_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((McVertex*)(G__getstructoffset()))->ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McVertex_ImplFileLine_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((McVertex*)(G__getstructoffset()))->ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__McVertex_McVertex_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   McVertex *p;
   p=new McVertex(*(McVertex*)G__int(libp->para[0]));
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__mcRootDataCintLN_McVertex);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef McVertex G__TMcVertex;
static int G__McVertex_wAMcVertex_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (McVertex *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (McVertex *)((G__getstructoffset())+sizeof(McVertex)*i);
   else  delete (McVertex *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* McParticle */
static int G__McParticle_McParticle_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   McParticle *p=NULL;
   if(G__getaryconstruct()) p=new McParticle[G__getaryconstruct()];
   else                    p=new McParticle;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__mcRootDataCintLN_McParticle);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McParticle_McParticle_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   McParticle *p=NULL;
      p = new McParticle(
(Int_t)G__int(libp->para[0]),(McParticle*)G__int(libp->para[1])
,(McVertex*)G__int(libp->para[2]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__mcRootDataCintLN_McParticle);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McParticle_getVertex_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((const McParticle*)(G__getstructoffset()))->getVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McParticle_getParent_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((const McParticle*)(G__getstructoffset()))->getParent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McParticle_getPDGId_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const McParticle*)(G__getstructoffset()))->getPDGId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McParticle_getChildCount_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const McParticle*)(G__getstructoffset()))->getChildCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McParticle_getChild_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((const McParticle*)(G__getstructoffset()))->getChild((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McParticle_addChild_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((McParticle*)(G__getstructoffset()))->addChild((McParticle*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McParticle_Class_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((McParticle*)(G__getstructoffset()))->Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McParticle_Class_Name_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((McParticle*)(G__getstructoffset()))->Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McParticle_Class_Version_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)((McParticle*)(G__getstructoffset()))->Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McParticle_Dictionary_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((McParticle*)(G__getstructoffset()))->Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McParticle_IsA_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((const McParticle*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McParticle_ShowMembers_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((McParticle*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McParticle_Streamer_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((McParticle*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McParticle_StreamerNVirtual_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((McParticle*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McParticle_DeclFileName_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((McParticle*)(G__getstructoffset()))->DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McParticle_DeclFileLine_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((McParticle*)(G__getstructoffset()))->DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McParticle_ImplFileName_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((McParticle*)(G__getstructoffset()))->ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McParticle_ImplFileLine_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((McParticle*)(G__getstructoffset()))->ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__McParticle_McParticle_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   McParticle *p;
   p=new McParticle(*(McParticle*)G__int(libp->para[0]));
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__mcRootDataCintLN_McParticle);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef McParticle G__TMcParticle;
static int G__McParticle_wAMcParticle_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (McParticle *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (McParticle *)((G__getstructoffset())+sizeof(McParticle)*i);
   else  delete (McParticle *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* McEvent */
static int G__McEvent_McEvent_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   McEvent *p=NULL;
   if(G__getaryconstruct()) p=new McEvent[G__getaryconstruct()];
   else                    p=new McEvent;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__mcRootDataCintLN_McEvent);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McEvent_Clean_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((McEvent*)(G__getstructoffset()))->Clean();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McEvent_Create_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((McEvent*)(G__getstructoffset()))->Create();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McEvent_getEvent_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const McEvent*)(G__getstructoffset()))->getEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McEvent_getRun_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const McEvent*)(G__getstructoffset()))->getRun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McEvent_getPartCount_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const McEvent*)(G__getstructoffset()))->getPartCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McEvent_setEvent_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((McEvent*)(G__getstructoffset()))->setEvent((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McEvent_setRun_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((McEvent*)(G__getstructoffset()))->setRun((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McEvent_getPart_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((const McEvent*)(G__getstructoffset()))->getPart((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McEvent_addPart_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((McEvent*)(G__getstructoffset()))->addPart((McParticle*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McEvent_Class_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((McEvent*)(G__getstructoffset()))->Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McEvent_Class_Name_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((McEvent*)(G__getstructoffset()))->Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McEvent_Class_Version_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)((McEvent*)(G__getstructoffset()))->Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McEvent_Dictionary_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((McEvent*)(G__getstructoffset()))->Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McEvent_IsA_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((const McEvent*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McEvent_ShowMembers_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((McEvent*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McEvent_Streamer_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((McEvent*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McEvent_StreamerNVirtual_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((McEvent*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McEvent_DeclFileName_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((McEvent*)(G__getstructoffset()))->DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McEvent_DeclFileLine_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((McEvent*)(G__getstructoffset()))->DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McEvent_ImplFileName_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((McEvent*)(G__getstructoffset()))->ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McEvent_ImplFileLine_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((McEvent*)(G__getstructoffset()))->ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__McEvent_McEvent_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   McEvent *p;
   p=new McEvent(*(McEvent*)G__int(libp->para[0]));
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__mcRootDataCintLN_McEvent);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef McEvent G__TMcEvent;
static int G__McEvent_wAMcEvent_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (McEvent *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (McEvent *)((G__getstructoffset())+sizeof(McEvent)*i);
   else  delete (McEvent *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* McVertex */

/* McParticle */

/* McEvent */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncmcRootDataCint {
 public:
  G__Sizep2memfuncmcRootDataCint() {p=&G__Sizep2memfuncmcRootDataCint::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncmcRootDataCint::*p)();
};

size_t G__get_sizep2memfuncmcRootDataCint()
{
  G__Sizep2memfuncmcRootDataCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancemcRootDataCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__mcRootDataCintLN_McVertex))) {
     McVertex *G__Lderived;
     G__Lderived=(McVertex*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__mcRootDataCintLN_McVertex),G__get_linked_tagnum(&G__mcRootDataCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__mcRootDataCintLN_McParticle))) {
     McParticle *G__Lderived;
     G__Lderived=(McParticle*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__mcRootDataCintLN_McParticle),G__get_linked_tagnum(&G__mcRootDataCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__mcRootDataCintLN_McEvent))) {
     McEvent *G__Lderived;
     G__Lderived=(McEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__mcRootDataCintLN_McEvent),G__get_linked_tagnum(&G__mcRootDataCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablemcRootDataCint() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,
-1);
   G__setnewtype(-1,"Signed Character 1 byte",0);
   G__search_typename2("UChar_t",98,-1,0,
-1);
   G__setnewtype(-1,"Unsigned Character 1 byte",0);
   G__search_typename2("Short_t",115,-1,0,
-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes",0);
   G__search_typename2("UShort_t",114,-1,0,
-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes",0);
   G__search_typename2("Int_t",105,-1,0,
-1);
   G__setnewtype(-1,"Signed integer 4 bytes",0);
   G__search_typename2("UInt_t",104,-1,0,
-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes",0);
   G__search_typename2("Seek_t",105,-1,0,
-1);
   G__setnewtype(-1,"File pointer",0);
   G__search_typename2("Long_t",108,-1,0,
-1);
   G__setnewtype(-1,"Signed long integer 4 bytes",0);
   G__search_typename2("ULong_t",107,-1,0,
-1);
   G__setnewtype(-1,"Unsigned long integer 4 bytes",0);
   G__search_typename2("Float_t",102,-1,0,
-1);
   G__setnewtype(-1,"Float 4 bytes",0);
   G__search_typename2("Double_t",100,-1,0,
-1);
   G__setnewtype(-1,"Float 8 bytes",0);
   G__search_typename2("Text_t",99,-1,0,
-1);
   G__setnewtype(-1,"General string",0);
   G__search_typename2("Bool_t",98,-1,0,
-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true)",0);
   G__search_typename2("Byte_t",98,-1,0,
-1);
   G__setnewtype(-1,"Byte (8 bits)",0);
   G__search_typename2("Version_t",115,-1,0,
-1);
   G__setnewtype(-1,"Class version identifier",0);
   G__search_typename2("Option_t",99,-1,0,
-1);
   G__setnewtype(-1,"Option string",0);
   G__search_typename2("Ssiz_t",105,-1,0,
-1);
   G__setnewtype(-1,"String size",0);
   G__search_typename2("Real_t",102,-1,0,
-1);
   G__setnewtype(-1,"TVector and TMatrix element type",0);
   G__search_typename2("Streamer_t",89,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("VoidFuncPtr_t",89,-1,0,
-1);
   G__setnewtype(-1,"pointer to void function",0);
   G__search_typename2("FreeHookFun_t",89,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ReAllocFun_t",81,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ReAllocCFun_t",81,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Axis_t",100,-1,0,
-1);
   G__setnewtype(-1,"Axis values type",0);
   G__search_typename2("Stat_t",100,-1,0,
-1);
   G__setnewtype(-1,"Statistics type",0);
   G__search_typename2("ErrorHandlerFunc_t",89,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* McVertex */
static void G__setup_memvarMcVertex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__mcRootDataCintLN_McVertex));
   { McVertex *p; p=(McVertex*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__mcRootDataCintLN_TLorentzVector),-1,-1,4,"m_pMomI=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__mcRootDataCintLN_TLorentzVector),-1,-1,4,"m_pMomF=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__mcRootDataCintLN_TLorentzVector),-1,-1,4,"m_pPosI=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__mcRootDataCintLN_TLorentzVector),-1,-1,4,"m_pPosF=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__mcRootDataCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* McParticle */
static void G__setup_memvarMcParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__mcRootDataCintLN_McParticle));
   { McParticle *p; p=(McParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_nPDGId=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__mcRootDataCintLN_McVertex),-1,-1,4,"m_pVert=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__mcRootDataCintLN_McParticle),-1,-1,4,"m_pParent=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__mcRootDataCintLN_TObjArray),-1,-1,4,"m_pChildList=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_nChildCount=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__mcRootDataCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* McEvent */
static void G__setup_memvarMcEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__mcRootDataCintLN_McEvent));
   { McEvent *p; p=(McEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_nEvent=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_nRun=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_nPartCount=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__mcRootDataCintLN_TObjArray),-1,-1,4,"m_pPartList=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__mcRootDataCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarmcRootDataCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncMcVertex(void) {
   /* McVertex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__mcRootDataCintLN_McVertex));
   G__memfunc_setup("McVertex",814,G__McVertex_McVertex_0_0,105,G__get_linked_tagnum(&G__mcRootDataCintLN_McVertex),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("McVertex",814,G__McVertex_McVertex_1_0,105,G__get_linked_tagnum(&G__mcRootDataCintLN_McVertex),-1,0,4,1,1,0,
"U 'TLorentzVector' - 0 - pPosI U 'TLorentzVector' - 0 - pPosF "
"U 'TLorentzVector' - 0 - pMomI U 'TLorentzVector' - 0 - pMomF",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getPosInitial",1340,G__McVertex_getPosInitial_3_0,85,G__get_linked_tagnum(&G__mcRootDataCintLN_TLorentzVector),-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getPosFinal",1116,G__McVertex_getPosFinal_4_0,85,G__get_linked_tagnum(&G__mcRootDataCintLN_TLorentzVector),-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getMomInitial",1331,G__McVertex_getMomInitial_5_0,85,G__get_linked_tagnum(&G__mcRootDataCintLN_TLorentzVector),-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getMomFinal",1107,G__McVertex_getMomFinal_6_0,85,G__get_linked_tagnum(&G__mcRootDataCintLN_TLorentzVector),-1,0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__McVertex_Class_7_0,85,G__get_linked_tagnum(&G__mcRootDataCintLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__McVertex_Class_Name_8_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__McVertex_Class_Version_9_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__McVertex_Dictionary_0_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__McVertex_IsA_1_1,85,G__get_linked_tagnum(&G__mcRootDataCintLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__McVertex_ShowMembers_2_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__McVertex_Streamer_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__McVertex_StreamerNVirtual_4_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__McVertex_DeclFileName_5_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__McVertex_DeclFileLine_6_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__McVertex_ImplFileName_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__McVertex_ImplFileLine_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("McVertex",814,G__McVertex_McVertex_9_1,(int)('i'),G__get_linked_tagnum(&G__mcRootDataCintLN_McVertex),-1,0,1,1,1,0,"u 'McVertex' - 1 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~McVertex",940,G__McVertex_wAMcVertex_0_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMcParticle(void) {
   /* McParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__mcRootDataCintLN_McParticle));
   G__memfunc_setup("McParticle",996,G__McParticle_McParticle_0_0,105,G__get_linked_tagnum(&G__mcRootDataCintLN_McParticle),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("McParticle",996,G__McParticle_McParticle_1_0,105,G__get_linked_tagnum(&G__mcRootDataCintLN_McParticle),-1,0,3,1,1,0,
"i - 'Int_t' 0 - id U 'McParticle' - 0 - pParent "
"U 'McVertex' - 0 - pVertex",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getVertex",958,G__McParticle_getVertex_3_0,85,G__get_linked_tagnum(&G__mcRootDataCintLN_McVertex),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getParent",938,G__McParticle_getParent_4_0,85,G__get_linked_tagnum(&G__mcRootDataCintLN_McParticle),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getPDGId",712,G__McParticle_getPDGId_5_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getChildCount",1325,G__McParticle_getChildCount_6_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getChild",804,G__McParticle_getChild_7_0,85,G__get_linked_tagnum(&G__mcRootDataCintLN_McParticle),-1,0,1,1,1,8,"i - 'Int_t' 0 - nIndex",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("addChild",781,G__McParticle_addChild_8_0,121,-1,-1,0,1,1,1,0,"U 'McParticle' - 0 - pChild",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__McParticle_Class_9_0,85,G__get_linked_tagnum(&G__mcRootDataCintLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__McParticle_Class_Name_0_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__McParticle_Class_Version_1_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__McParticle_Dictionary_2_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__McParticle_IsA_3_1,85,G__get_linked_tagnum(&G__mcRootDataCintLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__McParticle_ShowMembers_4_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__McParticle_Streamer_5_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__McParticle_StreamerNVirtual_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__McParticle_DeclFileName_7_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__McParticle_DeclFileLine_8_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__McParticle_ImplFileName_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__McParticle_ImplFileLine_0_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("McParticle",996,G__McParticle_McParticle_1_2,(int)('i'),G__get_linked_tagnum(&G__mcRootDataCintLN_McParticle),-1,0,1,1,1,0,"u 'McParticle' - 1 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~McParticle",1122,G__McParticle_wAMcParticle_2_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMcEvent(void) {
   /* McEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__mcRootDataCintLN_McEvent));
   G__memfunc_setup("McEvent",690,G__McEvent_McEvent_0_0,105,G__get_linked_tagnum(&G__mcRootDataCintLN_McEvent),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Clean",483,G__McEvent_Clean_2_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Create",596,G__McEvent_Create_3_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getEvent",834,G__McEvent_getEvent_4_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getRun",629,G__McEvent_getRun_5_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getPartCount",1248,G__McEvent_getPartCount_6_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setEvent",846,G__McEvent_setEvent_7_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - nEvent",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setRun",641,G__McEvent_setRun_8_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - nRun",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getPart",727,G__McEvent_getPart_9_0,85,G__get_linked_tagnum(&G__mcRootDataCintLN_McParticle),-1,0,1,1,1,8,"i - 'Int_t' 0 - index",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("addPart",704,G__McEvent_addPart_0_1,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"U 'McParticle' - 0 - pPart",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__McEvent_Class_1_1,85,G__get_linked_tagnum(&G__mcRootDataCintLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__McEvent_Class_Name_2_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__McEvent_Class_Version_3_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__McEvent_Dictionary_4_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__McEvent_IsA_5_1,85,G__get_linked_tagnum(&G__mcRootDataCintLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__McEvent_ShowMembers_6_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__McEvent_Streamer_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__McEvent_StreamerNVirtual_8_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__McEvent_DeclFileName_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__McEvent_DeclFileLine_0_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__McEvent_ImplFileName_1_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__McEvent_ImplFileLine_2_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("McEvent",690,G__McEvent_McEvent_3_2,(int)('i'),G__get_linked_tagnum(&G__mcRootDataCintLN_McEvent),-1,0,1,1,1,0,"u 'McEvent' - 1 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~McEvent",816,G__McEvent_wAMcEvent_4_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncmcRootDataCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
extern "C" void G__cpp_setup_globalmcRootDataCint() {

   /* Setting up global variables */
   G__resetplocal();


   G__resetglobalenv();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
extern "C" void G__cpp_setup_funcmcRootDataCint() {
   G__lastifuncposition();


   G__resetifuncposition();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__mcRootDataCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__mcRootDataCintLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__mcRootDataCintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__mcRootDataCintLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__mcRootDataCintLN_McVertex = { "McVertex" , 99 , -1 };
G__linked_taginfo G__mcRootDataCintLN_McParticle = { "McParticle" , 99 , -1 };
G__linked_taginfo G__mcRootDataCintLN_McEvent = { "McEvent" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablemcRootDataCint() {
  G__mcRootDataCintLN_TClass.tagnum = -1 ;
  G__mcRootDataCintLN_TObjArray.tagnum = -1 ;
  G__mcRootDataCintLN_TObject.tagnum = -1 ;
  G__mcRootDataCintLN_TLorentzVector.tagnum = -1 ;
  G__mcRootDataCintLN_McVertex.tagnum = -1 ;
  G__mcRootDataCintLN_McParticle.tagnum = -1 ;
  G__mcRootDataCintLN_McEvent.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablemcRootDataCint() {

   /* Setting up class,struct,union tag entry */
   G__tagtable_setup(G__get_linked_tagnum(&G__mcRootDataCintLN_McVertex),sizeof(McVertex),-1,29952,(char*)NULL,G__setup_memvarMcVertex,G__setup_memfuncMcVertex);
   G__tagtable_setup(G__get_linked_tagnum(&G__mcRootDataCintLN_McParticle),sizeof(McParticle),-1,29952,(char*)NULL,G__setup_memvarMcParticle,G__setup_memfuncMcParticle);
   G__tagtable_setup(G__get_linked_tagnum(&G__mcRootDataCintLN_McEvent),sizeof(McEvent),-1,29952,(char*)NULL,G__setup_memvarMcEvent,G__setup_memfuncMcEvent);
}
extern "C" void G__cpp_setupmcRootDataCint(void) {
  G__check_setup_version(30051472,"G__cpp_setupmcRootDataCint()");
  G__set_cpp_environmentmcRootDataCint();
  G__cpp_setup_tagtablemcRootDataCint();

  G__cpp_setup_inheritancemcRootDataCint();

  G__cpp_setup_typetablemcRootDataCint();

  G__cpp_setup_memvarmcRootDataCint();

  G__cpp_setup_memfuncmcRootDataCint();
  G__cpp_setup_globalmcRootDataCint();
  G__cpp_setup_funcmcRootDataCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncmcRootDataCint();
  return;
}
class G__cpp_setup_initmcRootDataCint {
  public:
    G__cpp_setup_initmcRootDataCint() { G__add_setup_func("mcRootDataCint",(G__incsetup)(&G__cpp_setupmcRootDataCint)); }
   ~G__cpp_setup_initmcRootDataCint() { G__remove_setup_func("mcRootDataCint"); }
};
G__cpp_setup_initmcRootDataCint G__cpp_setup_initializermcRootDataCint;

